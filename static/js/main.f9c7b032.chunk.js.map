{"version":3,"sources":["components/CalculatorButton.jsx","components/CalculatorContainer.jsx","components/App.jsx","index.js"],"names":["CalculatorButton","props","Button","onClick","onButtonClick","number","className","variant","color","CalculatorContainer","Container","maxWidth","map","symbol","App","useState","inputText","setInputText","num","setNum","expression","setExpression","type","value","expressionSolver","exp","solver","a","b","op","res","Number","NaN","index","result","copy","filter","item","order","i","lastIndexOf","j","length","splice","toString","parseInt","arr","t","forEach","firstIndex","lastIndex","x","newExpression","console","log","charAt","substring","trash","xx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9c7b032.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nfunction CalculatorButton(props) {\r\n    return <Button onClick={()=>{props.onButtonClick(props.number)}} className=\"calc-btn\" variant=\"outlined\" color={props.color}>{props.number}</Button>\r\n}\r\nexport default CalculatorButton;","import React from \"react\";\r\nimport CalculatorButton from \"./CalculatorButton\";\r\nimport Container from '@material-ui/core/Container';\r\nfunction CalculatorContainer(props){\r\n   \r\n    var arr=[\"1\",\"2\",\"3\",\"+\",\"4\",\"5\",\"6\",\"*\",\"7\",\"8\",\"9\",\"-\",\"0\",\".\",\"=\",\"/\",\"AC\",\"DEL\",\"(\",\")\"];\r\n return <Container maxWidth=\"sm\" className=\"outer-container\">\r\n     <div className=\"container\">\r\n      {arr.map((symbol)=>\r\n{        return <CalculatorButton key={symbol} onButtonClick={props.onButtonClick} number={symbol} color=\"primary\" className={symbol===\"=\"?\"equal-to\":null} />\r\n}\r\n\r\n \r\n\r\n )}\r\n     </div>\r\n </Container>\r\n}\r\nexport default CalculatorContainer;","import React,{useState} from \"react\";\r\nimport CalculatorContainer from \"./CalculatorContainer\"\r\nfunction App(props){\r\n  const [inputText,setInputText]=useState(\"\");\r\n  const [num,setNum]=useState(\"\");\r\n  const [expression,setExpression]=useState([]);\r\n  \r\n   \r\n  function buttonHandler(symbol){\r\n   function expressionSolver(exp){\r\n     function solver(a,b,op){\r\n    var res=0;\r\n       a=Number(a);\r\n       b=Number(b);\r\n    switch (op){\r\n      case \"+\":\r\n        res= a+b;\r\n        break;\r\n        case \"-\":\r\n        res= a-b;\r\n        break;\r\n        case \"*\":\r\n        res= a*b;\r\n        break;\r\n        case \"/\":\r\n        res= a/b;\r\n        break;\r\n        default:\r\n          res= NaN;\r\n    }\r\n    return res;\r\n  }\r\n     var index=0;\r\n     var result=0;\r\n     \r\n     var copy=exp.filter((item)=>item!==\"\");\r\n    var order=[\"/\",\"*\",\"-\",\"+\"];\r\n     for(var i=0;i<4;i++){\r\n      while(copy.lastIndexOf(order[i])!==-1)\r\n       {for(var j=0;j<copy.length;j++){\r\n          \r\n         if(copy[j]===order[i]){\r\n          index=j;\r\n          result=solver(copy[j-1],copy[j+1],order[i]);\r\n          copy.splice(index-1,3,result.toString());\r\n          \r\n         }\r\n        \r\n       }}\r\n     }\r\n  return copy;\r\n   }\r\n   if(symbol!==\"AC\"&&symbol!==\"=\"&&symbol!==\"DEL\")\r\n   {\r\n      setInputText(inputText+symbol);\r\n   }\r\n     if(parseInt(symbol)!==NaN&&symbol!==\"DEL\"){\r\n     setNum(num+symbol);\r\n      \r\n   }\r\n     if(symbol===\"/\"||symbol===\"-\"||symbol===\"+\"||symbol===\"*\"||symbol===\"(\"||symbol===\")\")\r\n   {\r\n     \r\n       setExpression([...expression,num,symbol]);\r\n       setNum(\"\");\r\n   }\r\n   \r\n   if(symbol===\"=\"){\r\n     \r\n     var arr=[...expression,num];\r\n     \r\n     arr=arr.filter((item)=>item!==\"\");\r\n     setNum(\"\");\r\n     \r\n    var t=0;\r\narr.forEach((item)=>{\r\n  if(item===\"(\")\r\n    {\r\n      t+=1;\r\n    }\r\n});\r\n\r\nvar firstIndex=0;\r\nvar lastIndex=0;\r\nvar x=[];\r\nfor(var j=1;j<=t;j++){\r\n   firstIndex=arr.lastIndexOf(\"(\");\r\n  \r\n  for(var i=firstIndex;i<arr.length;i++){\r\n   if(arr[i]===\")\"){\r\n     lastIndex=i;\r\n    break;   \r\n   }\r\n }\r\n   x= arr.splice(firstIndex+1,(lastIndex-firstIndex-1));\r\n  arr.splice(firstIndex,(lastIndex-firstIndex-2),expressionSolver(x)[0]);\r\n  \r\n}\r\n\r\n  \r\n  \r\n     var newExpression =expressionSolver(arr);\r\n     if(newExpression[0]===\"NaN\"){\r\n       setInputText(\"Invalid Input\");\r\n     }\r\n     else\r\n   { \r\n     setExpression(newExpression);\r\n     \r\n     \r\n      setInputText(newExpression[0]);\r\n     \r\n    \r\n    }\r\n\r\n     \r\n   }\r\n   if(symbol===\"AC\"){\r\n     setInputText(\"\");\r\n     setNum(\"\");\r\n     setExpression([]);\r\n   }\r\n   if(symbol===\"DEL\"){\r\n     console.log(expression);\r\n     console.log(Number(inputText.charAt(inputText.length-1)));\r\n     if(Number((inputText.charAt(inputText.length-1))>=0&&Number(inputText.charAt(inputText.length-1))<=9)||inputText.charAt(inputText.length-1)===\".\"){\r\n       console.log(\"number condition called\");\r\n       setInputText(inputText.substring(0,inputText.length-1));\r\n       if(num===\"\"&&expression.length===1){\r\n         console.log(\"result condition called\");\r\n        var trash =expression[0];\r\n        trash =trash.substring(0,trash.length-1);\r\n        setExpression([trash]);\r\n       }\r\n      else{\r\n      setNum(num.substring(0,num.length-1));\r\n      }\r\n     }\r\n     if(inputText.charAt(inputText.length-1)===\"/\"||inputText.charAt(inputText.length-1)===\"+\"||inputText.charAt(inputText.length-1)===\"-\"||inputText.charAt(inputText.length-1)===\"*\"){\r\n       console.log(\" symbol condition called\");\r\n       setInputText(inputText.substring(0,inputText.length-1));\r\n       var xx=expression;\r\n       xx.splice(xx.length-1,1);\r\nconsole.log(xx);\r\n       setExpression(xx);\r\n     }\r\n     \r\n   }\r\n  }\r\n   \r\n  return <div>\r\n  <h1>CALCULATOR</h1>\r\n  <div className=\"input-container\">\r\n  <input type=\"text\" value={inputText} ></input>\r\n  </div>\r\n  <CalculatorContainer onButtonClick={buttonHandler} />\r\n  </div>\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App.jsx\"\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}